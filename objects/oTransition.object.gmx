<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ssEDFX</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fade = 0;
moveplayer = 0;
if (global.transitiontype &gt; 1) event_user(0);
if(global.spectatorIndex == -1) with (oCharacter) visible = true;
if(oControl.mod_previous_room == rm_a0h35) global.waterlevel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.transitiontype == 0) {
    if (fade &lt; 1) {
        fade += 0.1;
    } else event_user(0);
}
if (global.transitiontype == 1) {
    if (fade &lt; 1) {
        fade += 0.1;
    } else if (moveplayer &lt; 30) {
        with (oCharacter) {
            x -= (x - global.transitionx) / 10;
            y -= (y - global.transitiony) / 10;
        }
        moveplayer += 1;
    } else event_user(0);
}

if(global.spectatorIndex != -1){
    with(oCharacter){
        x = global.targetx;
        y = global.targety;
        oCamera.x = x;
        oCamera.y = y;
    }
}

//if (global.widescreen_enabled != oControl.widescreen) oControl.wAlpha = moveplayer/30;

//if (floor(moveplayer) == 15) { // fix for transitioning to 4:3 from widescreen NOPE

//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(oCharacter)) {
    oCharacter.x = -100;
    oCharacter.y = -100;
}

// widescreen toggle on transition load
if ((global.widescreen_enabled != oControl.widescreen) &amp;&amp; (oControl.widescreen_switch == true)) {
    with (oControl) {
        widescreen = global.widescreen_enabled;
        if (widescreen) {
            widescreen_space = 106;
        }
        if (global.opfullscreen == 0) {
            set_window_scale(window_get_height()/240);
            window_set_position(window_get_x()+((53-(global.widescreen_enabled*106))*(window_get_height()/240)),window_get_y());
        }
    }
    oControl.widescreen_switch = false;
    //view_visible[2] = false;
}

if(!instance_exists(oClient) &amp;&amp; global.targetroom == rm_transition) global.targetroom = global.lastroom;
if(instance_exists(oClient) &amp;&amp; ds_list_size(oClient.posData) == 0 &amp;&amp; global.targetroom == rm_transition) global.targetroom = global.lastroom;

if(global.spectatorIndex != -1 &amp;&amp; global.targetroom == rm_transition){
    if(instance_exists(oClient)){
        if(ds_list_size(oClient.posData) &gt; 0){
            for(var f=0; f&lt;ds_list_size(oClient.posData); f++){
                var arrPos = oClient.posData[| f];
                var arrPosRoom = arrPos[4];
                if(f == global.spectatorIndex){
                    global.targetroom = arrPosRoom;
                }
            }
        }
    }
}

if(global.targetroom != rm_transition) room_goto(global.targetroom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((global.transitiontype == 0) || (global.transitiontype == 1)) {
    if (surface_exists(oControl.screen_surface)) draw_surface_ext(oControl.screen_surface, -oControl.widescreen_space/2, 0, 1, 1, 0, -1, 1 - fade);
} //


/*if (global.transitiontype == 0 || global.transitiontype == 1) {
    if (surface_exists(oControl.screen_surface)) draw_surface_ext(oControl.screen_surface, -oControl.widescreen_space/2, 0, 1, 1, 0, -1, 1 - fade);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
