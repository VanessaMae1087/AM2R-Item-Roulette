<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGawron</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

myhealth = 5;
damage = 8;
hitsound = sndEHit2;
deathsound = sndEDeath2;
platyoffset = -6;
frozenspr = sGawronFrozen;
flipx = 1;
state = 0;
active = 1;
if (x &gt;= oCharacter.x) facing = -1;
if (x &lt; oCharacter.x) facing = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>action_inherited();
if (active == 1 &amp;&amp; stun == 0 &amp;&amp; frozen == 0) {
    if (state == 0) {
        image_speed = 0.15; // og 0
        image_index = 1;
        vspeed = -3;
        state = 1;
    }
    if (state == 1) {
        vspeed = -3;
        if (y &lt;= oCharacter.y - 26) state = 2; // og oCharacter.y - 30
        //if (vspeed &lt; 0) vspeed += 0.02;
    }
    if (state == 2) {
        image_speed = 0.2; // OG 0.4
        vspeed = 0;
        hspeed = facing * 2.5;
    }
} else speed = 0;
if (state == 100) enemy_death();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();

// I wrote this without realizing Gawrons don't need the edge case lol

/*if (!oControl.widescreen) {
    instance_destroy();
} else {
    if (x &lt; (-oControl.widescreen_space/2)) || (x &gt; (room_width + (oControl.widescreen_space/2))) {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (flipx) {
    image_xscale = facing;
} else image_xscale = 1;
if (frozen &gt; 0) {
    myspr = frozenspr;
} else myspr = sprite_index;
if (!flashing) {
    draw_sprite_ext(myspr, -1, x, y + sin(x/10), image_xscale, 1, image_angle, -1, image_alpha);
    if (frozen &gt; 0 &amp;&amp; frozen &lt; freezetime * 0.2) {
        draw_set_blend_mode(bm_add);
        draw_sprite_ext(myspr, -1, x, y + sin(x/10), image_xscale, 1, image_angle, -1, 1 - fxtimer * 0.25);
        draw_set_blend_mode(bm_normal);
    }
}
if (flashing) {
    draw_sprite_ext(myspr, -1, x, y + sin(x/10), image_xscale, 1, image_angle, make_color_rgb(80, 80, 80), 1);
    draw_set_blend_mode(bm_add);
    repeat (3) draw_sprite_ext(myspr, -1, x, y + sin(x/10), image_xscale, 1, image_angle, -1, 1 - fxtimer * 0.25);
    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
