<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMissile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sProjectileMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (y &gt; global.waterlevel &amp;&amp; global.waterlevel != 0) {
    inwater = 1;
} else inwater = 0;
alarm[1] = 1;
pbeam = 0;
ibeam = 0;
wbeam = 0;
sbeam = 0;
startx = x;
starty = y;
flame = -4;
image_speed = 0.5;
if (oControl.debug &gt; 0) {
    if (instance_exists(oMGamma)) {
        x = oMGamma.x;
        y = oMGamma.y + 16;
    }
}
sax = 0;
myid = 0;
icemissiles = global.icemissiles;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (smissile == 0) {
    make_smoke_explosion2(startx + (x - startx) / 2, starty + (y - starty) / 2);
} else make_smoke_explosion(startx + (x - startx) / 2, starty + (y - starty) / 2);
flame = instance_create(x, y, oMissileFlame);
flame.image_angle = image_angle;
if (smissile) flame.sprite_index = sSMissileFlame;
if (icemissiles) flame.sprite_index = sIceMissileFlame;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(oCharacter)) {
    if(myid == 0){
        if ((direction == 0 || direction == 45 || direction == 315) &amp;&amp; oCharacter.xVel &gt; 0) x += oCharacter.xVel;
        if ((direction == 180 || direction == 135 || direction == 225) &amp;&amp; oCharacter.xVel &lt; 0) x += oCharacter.xVel;
        if (direction == 270 &amp;&amp; oCharacter.yVel &gt; 0) y += oCharacter.yVel;  
    } else {
        if ((direction == 0 || direction == 45 || direction == 315) &amp;&amp; velX &gt; 0) x += velX;
        if ((direction == 180 || direction == 135 || direction == 225) &amp;&amp; velX &lt; 0) x += velX;
        if (direction == 270 &amp;&amp; velY &gt; 0) y += velY;  
    }
}
if (smissile) speed += 0.5;
if (y &gt; global.waterlevel &amp;&amp; global.waterlevel != 0) {
    if (inwater == 0) instance_create(x, global.waterlevel, oSmallSplash);
    inwater = 1;
} else {
    if (inwater == 1) instance_create(x, global.waterlevel, oSmallSplash);
    inwater = 0;
}
if(instance_exists(oClient)){
    if(ds_list_size(oClient.roomListData) &gt; 0){
        if (x &gt; room_width + 100 || x &lt; -100 || y &gt; room_height + 100 || y &lt; -100){
            instance_destroy();
            trail.speed = speed;
            trail.alarm[0] = 30;
            with (flame) instance_destroy();
        }
    } else {
        if (x &lt; view_xview[0] - 48 - (oControl.widescreen_space/2)|| x &gt; view_xview[0] + view_wview[0] + 48 + (oControl.widescreen_space/2) || y &lt; view_yview[0] - 48 || y &gt; view_yview[0] + view_hview[0] + 48) {
            instance_destroy();
            trail.speed = speed;
            trail.alarm[0] = 30;
            with (flame) instance_destroy();
        }
    }
} else {
    if (x &lt; view_xview[0] - 48 - (oControl.widescreen_space/2)|| x &gt; view_xview[0] + view_wview[0] + 48 + (oControl.widescreen_space/2) || y &lt; view_yview[0] - 48 || y &gt; view_yview[0] + view_hview[0] + 48) {
        instance_destroy();
        trail.speed = speed;
        trail.alarm[0] = 30;
        with (flame) instance_destroy();
    }
}
trail.x = x;
trail.y = y;
if (instance_exists(flame)) {
    flame.x = x;
    flame.y = y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMultiHitbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(myid != other.myid &amp;&amp; sax != other.sax &amp;&amp; !other.spectator){
    global.checkID = other.myid;
    global.checkX = other.x;
    global.checkY = other.y;
    global.checkBeam = false;
    global.checkMissile = true;
    global.checkDamage = damage;
    global.checkFreeze = false;
    if(icemissiles) global.checkFreeze = true;
    if(sax != other.sax) with(oClient) event_user(3);
    event_user(0);
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oElderSeptogg">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NULL

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBlobSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NULL

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMAlphaShell">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMAlpha">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.canbehit) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSolid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBlockSand">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) event_user(0);
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBlockShootChain">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) event_user(0);
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBlockShoot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) {
    check_linkid();
    event_user(0);
}
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rspark = instance_create(x, y, oFXAnimSpark);
rspark.sprite_index = sReflectSpark;
rspark.image_speed = 0.5;
rspark.depth = -120;
rmsl = instance_create(x, y, oRMissile);
if (smissile) rmsl.sprite_index = sSMissile;
if (!smissile &amp;&amp; icemissiles) rmsl.sprite_index = sIceMissile;
rmsl.direction = direction + 190 - random(20);
if (direction != 90) {
    rmsl.speed = 2;
    rmsl.vspeed = -2;
}
sfx_stop(sndDeflect);
sfx_play(sndDeflect);
trail.speed = speed;
trail.alarm[0] = 2;
with (flame) instance_destroy();
light = instance_create(x, y, oFadeLight32);
light.fadespeed = 0.1;
light.alarm[0] = 2;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>expl = instance_create(round(x), round(y), oMissileExpl);
expl.sax = sax;
expl.myid = myid;
if (smissile == 0) {
    expl.image_xscale = 0.6;
    expl.image_yscale = 0.6;
    expl.damage = 5;
    expl.smissile = 0;
    if (!icemissiles) PlaySoundMono(sndMissileExpl);
    light = instance_create(x, y, oFadeLight32);
    light.fadespeed = 0.1;
    light.alarm[0] = 10;
    if (icemissiles){
        expl.sprite_index = sTesterIceSpark;
        expl.image_xscale = 1;
        expl.image_yscale = 1;
        expl.image_speed = 0.3;
        PlaySoundMono(sndMissileExpl);
        PlaySoundMono(sndIceBeamHit);
    }
}
if (smissile) {
    quake = instance_create(0, 0, oQuake);
    quake.delay = 0;
    quake.duration = 10;
    quake.intensity = 2;
    expl.damage = 25;
    expl.smissile = 1;
    sfx_stop(sndFlyby);
    PlaySoundMono(sndSMissileExpl);
    light = instance_create(x, y, oFadeLight64);
    light.fadespeed = 0.1;
    light.alarm[0] = 10;
    ctrl_vibrate(0, 0, 20);
}
if (inwater) {
    repeat (4 + floor(random(4))) {
        bubble = instance_create(x, y, oLBubble);
        if (instance_exists(bubble)) {
            bubble.hspeed = 2 - random(4);
            bubble.vspeed = -0.1 - random(1);
        }
    }
}
trail.speed = speed;
trail.alarm[0] = 2;
with (flame) instance_destroy();
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
